<?php

namespace Flower\StockBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
    /**
     * @param array $params
     * @return mixed
     */
    public function getTotalCount(array $params = array())
    {
        $qb = $this->createQueryBuilder('p');

        $qb->select('COUNT(p)');
        $qb->where('p.enabled = :enabled')->setParameter('enabled', true);
        if (isset($params['is_rawmaterial'])) {
            $qb->andWhere('p.rawMaterial= :is_rawmaterial')->setParameter('is_rawmaterial', $params['is_rawmaterial']);
        }

        return $qb->getQuery()->getSingleScalarResult();
    }

    /**
     * @param array $params
     * @return mixed
     */
    public function getTotalCountWithouhStock(array $params = array())
    {
        $qb = $this->createQueryBuilder('p');

        $qb->select('COUNT(p)');
        $qb->where('p.stock <= 0');
        if (isset($params['is_rawmaterial'])) {
            $qb->andWhere('p.rawMaterial= :is_rawmaterial')->setParameter('is_rawmaterial', $params['is_rawmaterial']);
        }

        return $qb->getQuery()->getSingleScalarResult();
    }
}
