{% extends "FlowerCoreBundle::layout.html.twig" %}

{% block title %}{{ 'Stadistics'|trans({}, 'Sale') }} - {{ parent() }}{% endblock %}

{% block app_menu %}
    {{ include("FlowerSalesBundle::appnav.html.twig", { 'app_sale_report': true }) }}
{% endblock %}

{% block body %}
    <section class="content-header">
        <h1>{{'Stadistics' |trans({}, 'Sale') }}</h1>
    </section>
    <section class="content">
        <div class="box">
            <div class="box-header">
            </div>
            <div class="box-body">
                <div class="col-xs-12">
                    <h3>{{'Comparativo %lastYear% vs. %thisYear%' | trans({"%thisYear%" : thisYear, "%lastYear%": lastYear},'Sale')}}</h3>
                        <div>
                            <canvas id="sales-comparative" height="200"></canvas>
                            <div id="legend"></div>
                        </div>
                </div>
                <div class="col-xs-6">
                    <h3 class="text-center">{{'Top 10 Vendedores' | trans({},'Sale')}}</h3>
                    <table class="table table-hover table-condensed">
                        <thead>
                            <tr>
                                <th scope="col">{{'user Id' | trans({},"Sale")}}</th>
                                <th scope="col">{{'username' | trans({},"Sale")}}</th>
                                <th scope="col">{{'count sales' | trans({},"Sale")}}</th>
                                <th scope="col">{{'total sales($)' | trans({},"Sale")}}</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for topSaler in topSalers %}
                                <tr>
                                    <td>{{topSaler.userId}}</td>
                                    <td>{{topSaler.username}}</td>
                                    <td>{{topSaler.count | number_format(2, '.', ',')}}</td>
                                    <td>${{topSaler.sum | number_format(2, '.', ',')}}</td>
                                </tr>
                                {% endfor %}
                        </tbody>
                    </table>
                </div>
                <div class="col-xs-6">
                    <h3 class="text-center">Top 10 Productos</h3>
                    <table class="table table-hover table-condensed">
                        <thead>
                            <tr>
                                <th scope="col">{{'product code' | trans({},"Sale")}}</th>
                                <th scope="col">{{'product name' | trans({},"Sale")}}</th>
                                <th scope="col">{{'count product' | trans({},"Sale")}}</th>
                                <th scope="col">{{'total product($)' | trans({},"Sale")}}</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for topProduct in topProducts %}
                                <tr>
                                    <td>{{topProduct.productId}}</td>
                                    <td>{{topProduct.name}}</td>
                                    <td>{{topProduct.count | number_format(2, '.', ',')}}</td>
                                    <td>${{topProduct.sum | number_format(2, '.', ',')}}</td>
                                </tr>
                                {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="box-footer">

            </div>

    </section>

{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/flowercore/js/plugins/chartjs/Chart.js') }}" type="text/javascript"></script>
    <script type="text/javascript">
        var data = {
            labels: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio","Agosto","Septiembre", "Octubre","Noviembre","Diciembre"],
            datasets: [
                {
                    label: "{{thisYear}}",
                    fillColor: "rgba(220,220,220,0.2)",
                    strokeColor: "rgba(220,220,220,1)",
                    pointColor: "rgba(220,220,220,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: [
                    {% for item in salesThisYear %}
                        {{item["sales"]}},
                    {% endfor %}
                    ]
                },
                {
                    label: "{{lastYear}}",
                    fillColor: "rgba(151,187,205,0.2)",
                    strokeColor: "rgba(151,187,205,1)",
                    pointColor: "rgba(151,187,205,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(151,187,205,1)",
                    data: [
                        {% for item in salesLastYear %}
                            {{item["sales"]}},
                        {% endfor %}
                    ]
                }
            ]
        };
        $(function () {

            var lineChartOptions = {
                            scaleShowGridLines : true,///Boolean - Whether grid lines are shown across the chart
                            scaleGridLineColor : "rgba(0,0,0,.05)",//String - Colour of the grid lines
                            scaleGridLineWidth : 1,//Number - Width of the grid lines
                            scaleShowHorizontalLines: true,//Boolean - Whether to show horizontal lines (except X axis)
                            scaleShowVerticalLines: true,//Boolean - Whether to show vertical lines (except Y axis)
                            bezierCurve : true,//Boolean - Whether the line is curved between points
                            bezierCurveTension : 0.4,//Number - Tension of the bezier curve between points
                            pointDot : true,//Boolean - Whether to show a dot for each point
                            pointDotRadius : 4,//Number - Radius of each point dot in pixels
                            pointDotStrokeWidth : 1,//Number - Pixel width of point dot stroke
                            pointHitDetectionRadius : 20,//Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                            datasetStroke : true,//Boolean - Whether to show a stroke for datasets
                            datasetStrokeWidth : 2,//Number - Pixel width of dataset stroke
                            datasetFill : true,//Boolean - Whether to fill the dataset with a colour
                            maintainAspectRatio: false,
                            responsive: true,
                            legendTemplate : '<div class="list-unstyled <%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){ %><label><span style=\"background-color:<%=datasets[i].strokeColor%>;height: 10px;width: 10px;display: inline-block;margin: 0px 4px 0px 10px;\"></span><%if(datasets[i].label){ %><%=datasets[i].label%><% }%></label><%}%></div>'
                        }
            var lineChartCanvas = $("#sales-comparative").get(0).getContext("2d");
            lineChart = new Chart(lineChartCanvas).Line(data, lineChartOptions);
            lineChart.generateLegend();
            $("#legend").html(lineChart.generateLegend());
        });
    </script>
{% endblock %}


